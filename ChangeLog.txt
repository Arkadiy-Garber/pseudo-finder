Pseudo finder change log
########################
v0.11 -- 09/10/2018
*Major code refactoring:
    -annotate.py: Completely reorganized annotate.main(). Code is more readable and faster. All output files are automatically written.
    -reannotate.py: New module, replacing the old method of providing blast files to annotate.py for a reannotation.
    -genome_map.py: No longer needs to be called explicitly, annotate.py will now automatically produce the chromosome map with each run.
    -visualize.py: Makes use of the new reannotate.py module to increase code readability and consistency.
    -pseudofinder_test.py: Small changes to accomodate the major changes to other modules.
*Summary file is now more informative.
*README.md updated

v0.10 -- 25/09/2018
*Minor code reorganization
    -previously: all modules were contained in the main directory
    -now: pseudo_finder.py is still found in the main directory, but all other modules were moved to ./modules.
*New feature: Test
    -Allows users to run the full pipeline on Candidatus Tremblaya Princeps PCIT
*Reformatted all code to fit PEP8 guidelines.
*Various other smaller changes.

v0.09 -- 30/04/2018
*Major code reorganization
    -previously: all executable code was in one file, pseudo_finder.py
    -now: pseudo_finder.py routes users to either annotate.py, visualize.py or genome_map.py
*New feature: visualize
    -allows users to generate a 3D surface plot in HTML format to inspect the quantity of pseudogenes called when
     '--length_pseudo' and '--shared_hits' are varied.
*New feature: map
    -allows users to plot all pseudogene calls from a GFF file on to a chromosome map.
*README.md has been updated to reflect the changes.

v0.08 -- 02/03/2018
*Added 4 new adjustable parameters (see --help for more info):
	--distance: Maximum distance between two regions to consider joining them.
	--hitcap: Maximum number of allowed hits for BLAST.
	--contig_ends: Forces the program to include intergenic regions at contig ends.
	--intergenic_threshold: Number of BlastX hits needed to annotate an intergenic region as a pseudogene.
*Simplified code by adding a new data type standardize data parsing and improving argument handling
*Added tracker in log.txt for number of intergenic pseudogenes detected 

v0.07 -- 24/02/2018
*Implemented framework for four output types:
	[1]: Pseudogenes in GFF			<- Completed
	[2]: Protein coding genes in GFF	<- Partial functionality
	[3]: Pseudogenes in fasta		<- Not currently working
	[4]: Protein coding genes in FAA	<- Completed
*Fixed --help menu, beautified to increase readability
*Main function re-written to increase readability
*Log file contents updated
*Various bug fixes to blast file parsing
*Reduced amount of information printed to stdout

v0.06 -- 12/02/2018
* Drastically decreased runtime on full genomes
* Body of code reorganized and cleaned

v0.05 -- 03/02/2018
* Migrated to Github 
* Implemented a summary of pseudogene candidates
* Readme with installation instructions
* Several bug fixes
* Pseudogene detection from intergenic regions temporarily disabled
